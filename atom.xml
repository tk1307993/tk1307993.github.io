<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>留学生CS编程作业代写</title>
  
  <subtitle>专业 高效 原创 QQ：1926742804</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tk1307993.coding.me/"/>
  <updated>2018-08-08T15:35:51.914Z</updated>
  <id>https://tk1307993.coding.me/</id>
  
  <author>
    <name>CPlusPlus小砖家</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python代写：COMP1001-MoreTextProcessing</title>
    <link href="https://tk1307993.coding.me/COMP1001-MoreTextProcessing.html"/>
    <id>https://tk1307993.coding.me/COMP1001-MoreTextProcessing.html</id>
    <published>2018-08-08T15:33:20.000Z</published>
    <updated>2018-08-08T15:35:51.914Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>用Python的一个优势便是十分适合Text processing，由于Python内建了许多函数，对于文字、字符的处理十分便捷，如字符串连接、字符串截取、字符串查找、字符串替换、字符串比较、字符串分割、字符串翻转、字符串编码等，都有对应的函数进行处理。相比C语言，节省了很多开发工作量。</p><h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>This question prints the leaves of a symmetric tree. A user will be prompted for a symbol and a positive position for the tip of the leaves. Starting from the tip, the tree will fan out on both sides symmetrically until left side of the leaves reaches the left edge, assuming that the right edge has no limit. For example</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Please enter a symbol: *</span><br><span class="line">Please enter a positive position</span><br><span class="line">of the symbol on the first line: 10</span><br><span class="line"><span class="code">         *</span></span><br><span class="line"><span class="code">        ***</span></span><br><span class="line"><span class="code">       *****</span></span><br><span class="line"><span class="code">      *******</span></span><br><span class="line"><span class="code">     *********</span></span><br><span class="line"><span class="code">    ***********</span></span><br><span class="line">   <span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span><br><span class="line">  <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span></span><br><span class="line"> <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**</span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题就是一个简单的字符串处理，注意逻辑处理就好，难度不大，直接上代码。</p><p>不过越是容易的题目，越不容易写出精简的代码，本题打印最简单的方法可由一行代码实现。</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="comment"># user input</span></span><br><span class="line">  symbol = input(<span class="string">"Please enter a symbol: "</span>)</span><br><span class="line">  pos = eval(input(<span class="string">"Please enter a positive position \nof the symbol on the first line: "</span>))</span><br><span class="line"></span><br><span class="line">  <span class="comment"># print the leaves</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(pos):</span><br><span class="line">      print((pos - <span class="number">1</span> - i) * <span class="string">" "</span> + (<span class="number">2</span> * i + <span class="number">1</span>) * symbol)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本题就是一个简单的字符串处理，注意逻辑处理就好，难度不大，直接上代码。
    
    </summary>
    
      <category term="Python" scheme="https://tk1307993.coding.me/categories/Python/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
  </entry>
  
  <entry>
    <title>C++代写：CS3530 Rat In A Maze Problem</title>
    <link href="https://tk1307993.coding.me/CS3530-RatInAMazeProblem.html"/>
    <id>https://tk1307993.coding.me/CS3530-RatInAMazeProblem.html</id>
    <published>2018-08-07T12:19:28.000Z</published>
    <updated>2018-08-07T12:23:13.292Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Rat in a maze problem，是用回溯法求解迷宫问题的经典例题。回溯法是一种优选的搜索法，根据择优的条件向前或向后搜索，最终获得目标。当向前搜索到某一步，根据目标函数得到的结果不是最优时，进行回溯，重新选择探索方向。由此得到最优解。<br>回溯法解决问题的基本步骤一般为：</p><ol><li>根据给定问题，定义目标函数，并保证该问题至少有一个解</li><li>确定搜索的空间结构，确保回溯法可以遍历整个解空间</li><li>通过深度优先算法的形式，搜素整个解空间，并通过适当剪纸来减少冗余的搜索</li></ol><p>回溯法的一个应用场景便是解决迷宫问题。</p><h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>In this problem you will solve the “Rat in a maze problem”, using Stacks and Queues (Lectures 12-14).<br>The main points we shall be covering are:</p><p>Using Stacks and Queues in an application</p><ol><li>Re-enforcement of the usage and advantages of makefiles / make utility in UNIX/Linux</li><li>Use of abstract data types in C++, and separate compilation</li><li>Use of header files and libraries for Stacks and Queues</li></ol><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要采用Stack和Queue来解决迷宫问题。</p><p>栈用于存放回溯算法中的搜索路径，由于栈的后进先出特性，可以很容易的实现回溯。</p><p>队列用于存放已经搜索过的最优路径，由于队列的先进先出特性，可以很容易的进行目标函数的计算。</p><p>目标函数：从(0, 0)走到(N, N)的Taxicab geometry，也就是曼哈顿距离。</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>题目搜给的迷宫为<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">011101000100000</span></span><br><span class="line"><span class="number">010001100111100</span></span><br><span class="line"><span class="number">011001000000000</span></span><br><span class="line"><span class="number">001000010111111</span></span><br><span class="line"><span class="number">001011000010000</span></span><br><span class="line"><span class="number">001000101010100</span></span><br><span class="line"><span class="number">000010010000100</span></span><br></pre></td></tr></table></figure></p><p>我们需要利用回溯法，从左上角走到右下角</p><p>下面给出程序的回溯搜索算法部分的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> SearchEngine::DoMove(<span class="keyword">int</span> movePosition) &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">switch</span> (movePosition) &#123;</span><br><span class="line">    <span class="keyword">case</span> MOVE_LEFT:  </span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_LEFT) &amp;&amp; SearchEngine::Search(MOVE_LEFT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_UP) &amp;&amp; SearchEngine::Search(MOVE_UP, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_DOWN) &amp;&amp; SearchEngine::Search(MOVE_RIGHT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;      </span><br><span class="line">      SearchEngine::DoMove(MOVE_RIGHT);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MOVE_UP:</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_LEFT) &amp;&amp; SearchEngine::Search(MOVE_LEFT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_UP) &amp;&amp; SearchEngine::Search(MOVE_UP, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_RIGHT) &amp;&amp; SearchEngine::Search(MOVE_RIGHT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      SearchEngine::DoMove(MOVE_DOWN);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MOVE_RIGHT:</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_UP) &amp;&amp; SearchEngine::Search(MOVE_UP, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_RIGHT) &amp;&amp; SearchEngine::Search(MOVE_RIGHT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_DOWN) &amp;&amp; SearchEngine::Search(MOVE_RIGHT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      SearchEngine::DoMove(MOVE_LEFT);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> MOVE_DOWN:</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_LEFT) &amp;&amp; SearchEngine::Search(MOVE_LEFT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_RIGHT) &amp;&amp; SearchEngine::Search(MOVE_RIGHT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (SearchEngine::TryMove(MOVE_DOWN) &amp;&amp; SearchEngine::Search(MOVE_RIGHT, length - <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      SearchEngine::DoMove(MOVE_UP);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Rat in a maze problem，是用回溯法求解迷宫问题的经典例题。回溯法是一种优选的搜索法，根据择优的条件向前或向后搜索，最终获得目标。
    
    </summary>
    
      <category term="Writing" scheme="https://tk1307993.coding.me/categories/Writing/"/>
    
    
      <category term="Algorithm" scheme="https://tk1307993.coding.me/tags/Algorithm/"/>
    
      <category term="Data Structure" scheme="https://tk1307993.coding.me/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>Written代写：COMP435 Multimedia Technologies TME5</title>
    <link href="https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME5.html"/>
    <id>https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME5.html</id>
    <published>2018-08-06T13:14:25.000Z</published>
    <updated>2018-08-06T13:16:19.160Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Glossary"><a href="#Glossary" class="headerlink" title="Glossary"></a>Glossary</h3><p>For TME 5, you will prepare a glossary of key terms presented throughout the course. You will write short descriptions of five terms from each unit in your own words as you progress through the course.<br>This assignment is intended to help you attain a deeper understanding of the various concepts developed in the course.<br>Deliverable<br>At the end of the course, you will compile a single list of all the terms you have defined and submit them in a Word document of pdf. Include a cover page that states your name, ID, course number, course name, date, and TME number.<br>Evaluation</p><ol><li>Correctness (80%): Have you correctly described the key terms?</li><li>Presentation (20%): Is the material presented in a manner that is easy to read?</li></ol>]]></content>
    
    <summary type="html">
    
      本题使用英文写作，总结多媒体技术
    
    </summary>
    
      <category term="Writing" scheme="https://tk1307993.coding.me/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>Written代写：COMP435 Multimedia Technologies TME4</title>
    <link href="https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME4.html"/>
    <id>https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME4.html</id>
    <published>2018-08-05T02:15:49.000Z</published>
    <updated>2018-08-05T02:18:46.883Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>TME 4 is a written assignment. The purpose of this assignment is to help you understand the architecture of a media server and how it can be used in one of the multimedia applications. </p><p>The report should have two parts.</p><h3 id="Part-1"><a href="#Part-1" class="headerlink" title="Part 1"></a>Part 1</h3><p>In this part you will evaluate one open source media server you may find. In case you are not sure, you may try VideoLan (<a href="http://www.videolan.org/" target="_blank" rel="noopener">http://www.videolan.org/</a>) or Icecast (<a href="http://www.icecast.org/)" target="_blank" rel="noopener">http://www.icecast.org/)</a>. </p><p>VideoLan is recommended, as the documentation is more readily available. However, you might want to choose Icecast if you are planning to write on Internet Radio (see part 2). All other open source projects are acceptable.<br>In the report you should have the following:</p><ol><li>A one- to two-page summary of a brief history of the server.</li><li>A three- to five-page summary of the functionalities of the media server. At a minimum you should describe all technical details including the streaming protocols used or available, the clients supported, the formats supported, support of multicast, any compliance issues, and platforms supported.</li><li>An installation and a system management example.</li><li>A list of references.</li><li>Total length of part 1 should be about 6 pages.</li></ol><h3 id="Part-2"><a href="#Part-2" class="headerlink" title="Part 2"></a>Part 2</h3><p>In this part you will develop a strategy to implement one of the following applications using the media server you chose in Part 1:</p><ol><li>Video serving</li><li>Internet radio station</li><li>Videoconferencing</li><li>Live broadcasting</li></ol><p>In your report you should include:</p><ol><li>A graphic design of your application</li><li>Assumptions of your client machines (desktop or laptop computers, mobile devices).</li><li>Logging of user feedback.</li><li>A list of references.<br>Total length of part 2 should be about 6 pages. If you have a lot of graphs or pictures, you may extend the number of pages.</li></ol>]]></content>
    
    <summary type="html">
    
      本题使用英文写作，理解多媒体播放器的架构和应用
    
    </summary>
    
      <category term="Writing" scheme="https://tk1307993.coding.me/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>Written代写：COMP435 Multimedia Technologies TME3</title>
    <link href="https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME3.html"/>
    <id>https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME3.html</id>
    <published>2018-08-04T02:16:30.000Z</published>
    <updated>2018-08-04T02:21:30.159Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>TME 3 is a written assignment. The idea of this exercise is to investigate details inside a codec using Theora and Vorbis.</p><p>All relevant information you may find in xiph: <a href="http://xiph.org/ogg/" target="_blank" rel="noopener">http://xiph.org/ogg/</a></p><h3 id="Part-1-Vorbis"><a href="#Part-1-Vorbis" class="headerlink" title="Part 1: Vorbis"></a>Part 1: Vorbis</h3><p>Your report should contain the following:</p><ol><li>A one- to two-page summary of Vorbis.</li><li>Technical details including, but not limited to, sample rate, bit rate, compression ratio, support of variable and constant bit rate, brief specification of Vorbis.</li><li>A comparison of Vorbis and MP3. You may search the Internet for any comparison reports of listening quality. Note that you should give the comparison of different bit rates.</li><li>A list of references</li><li>Total length of part 1 should be about 5 pages.</li></ol><h3 id="Part-2-Theora"><a href="#Part-2-Theora" class="headerlink" title="Part 2: Theora"></a>Part 2: Theora</h3><p>Your report should contain the following:</p><ol><li>A one- to two-page summary of Theora.</li><li>Technical details including, but not limited to, algorithms used, brief specification of Theora, bitrate and resolution supported, and o/s supported.</li><li>A comparison of Theora and MPEG-4. You may search the Internet for any comparison reports of viewing experience or quality of Theora and MPEG-4. Notice that the concept of video quality is very rich, diverse, and extensively studied. It is not the intention of this exercise to present a survey on the concept of video quality to compare Theora and MPEG-4. You only need to give one or two reports that help the reader understand at least one aspect of the viewing differences between the two codecs. Be sure to include in your report the scope and meaning of video quality.</li><li>A list of references</li><li>Total length of part 2 should be about 5 pages.</li></ol><h3 id="Part-3-Ogg"><a href="#Part-3-Ogg" class="headerlink" title="Part 3: Ogg"></a>Part 3: Ogg</h3><p>What is Ogg and how is it related to Vorbis and Theora? Also give a brief summary on the Ogg container format. Total length of part 3 should be about 3 pages.</p>]]></content>
    
    <summary type="html">
    
      本题使用英文写作，分析介绍对比Vorbis，Theora，Ogg
    
    </summary>
    
      <category term="Writing" scheme="https://tk1307993.coding.me/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>Java代写：COMP435 Multimedia Technologies TME2</title>
    <link href="https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME2.html"/>
    <id>https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME2.html</id>
    <published>2018-08-03T13:06:55.000Z</published>
    <updated>2018-08-03T13:10:20.190Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>The purpose of this exercise is to help you understand the various parameters that affect the quality of a compressed image. Using JPEG as an example, you are required to write a program to control the quantization matrices used for compression. A brief discussion of the impact is included as part of the assignment.</p><h3 id="Follow-these-steps"><a href="#Follow-these-steps" class="headerlink" title="Follow these steps:"></a>Follow these steps:</h3><ol><li><p>Download this image. Note that the image is in bitmap format and is quite large. If you are running on unstable Internet service and have a problem downloading the file, please contact your tutor for assistance. <strong>flower.bmp</strong></p></li><li><p>Write a Java class that converts the bitmap image to JPEG format.</p></li><li>Add a second viewable pane on your image viewer in TME 1. The original pane should display the original bitmap image, and the second pane should display the converted JPEG image. <strong>TME2_Sample_Screen.JPG</strong></li><li>Add a mechanism to input the quantization matrix. It should have three options: <ol><li>default JPEG matrix - the numbers can be found on Table 9.1 and Table 9.2 of the textbook; </li><li>a constant number;</li><li>DC component only (i.e. set all other numbers to zero).</li></ol></li><li>Add an option to the File menu to output the compressed JPEG image to the hard disk.</li></ol><h3 id="Deliverables"><a href="#Deliverables" class="headerlink" title="Deliverables"></a>Deliverables</h3><ol><li>All source codes.</li><li>A setup guide to allow your tutor to set up the necessary environment and run the programs.</li><li>Four compressed output files: <ol><li>with default quantization matrix; </li><li>A low constant number (e.g. 1); </li><li>A absurdly high number (e.g. 200); </li><li>DC component only.</li></ol></li><li>A discussion document – discuss the various effects of the output file. Why are they like that? Will JPEG 2000 improve the quality?</li><li>All files must be zipped into one single file using Winzip. Do not include the original image.</li></ol>]]></content>
    
    <summary type="html">
    
      本题使用Java将BMP图片转换成JPEG格式
    
    </summary>
    
      <category term="Java" scheme="https://tk1307993.coding.me/categories/Java/"/>
    
    
      <category term="BMP" scheme="https://tk1307993.coding.me/tags/BMP/"/>
    
      <category term="JPEG" scheme="https://tk1307993.coding.me/tags/JPEG/"/>
    
  </entry>
  
  <entry>
    <title>Java代写：COMP435 Multimedia Technologies TME1</title>
    <link href="https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME1.html"/>
    <id>https://tk1307993.coding.me/COMP435-Multimedia-Technologies-TME1.html</id>
    <published>2018-08-02T13:53:29.000Z</published>
    <updated>2018-08-02T13:58:42.890Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Using Java Advanced Images (JAI) and Java Multimedia Framework (JMF) as examples, this exercise will familiarize students with API packages. Before you start working on this assignment you should read Unit 1 of the course to get an idea of the two packages, their pros and cons, current issues, and other alternatives.</p><p>This assignment is a programming exercise aimed at developing a simple image viewer and a media player. If you have a working knowledge of Java, the coding should be fairly simple. Do not overdo the exercise. It is not the purpose of the exercise to develop killer multimedia applications. It is hoped that you will enjoy this exercise.</p><p>The assignment assumes a certain programming expertise using Java Swing. If you are not comfortable, Sun has a great tutorial on Swing:<br><a href="http://docs.oracle.com/javase/tutorial/uiswing/" target="_blank" rel="noopener">http://docs.oracle.com/javase/tutorial/uiswing/</a></p><p>This assignment is divided into two parts, and you must deliver two programs:</p><h4 id="Part-1-Write-an-image-viewer-using-JAI"><a href="#Part-1-Write-an-image-viewer-using-JAI" class="headerlink" title="Part 1: Write an image viewer using JAI"></a>Part 1: Write an image viewer using JAI</h4><p>Your JAI image viewer must have the following components and functionalities:</p><ol><li>A menu bar with a File option that opens a file from a file dialog, and an Exit option to quit the application.</li><li>Zoom-in, Zoom-out and Normal buttons. You should enable and disable the buttons whenever appropriate.</li><li>A scrollable pane to view the image.</li><li>The viewer must support JPEG and BMP. You may add other file formats if you wish.</li></ol><h4 id="Part-2-Write-a-media-player-using-JMF"><a href="#Part-2-Write-a-media-player-using-JMF" class="headerlink" title="Part 2: Write a media player using JMF."></a>Part 2: Write a media player using JMF.</h4><p>Your MMF media player should have the following components and functionalities:</p><ol><li>It should play video files in MPEG, AVI and MOV formats, and audio files in MIDI format. Feel free to add other supported formats.</li><li>A menu bar with an Open option to open a media file, a Close option to close the currently opened file, and an Exit option to quit the application.</li><li>A control that consists of the following buttons:<ol><li>Playbutton – plays the current video or audio file.</li><li>Stopbutton – stops the current video or audio file.</li><li>Pausebutton – stop playing the current video or audio file. When the play button is pressed, it continues to play the file from the paused position.</li></ol></li><li>Position bar – display the current position of the media file.</li></ol><h3 id="Deliverables"><a href="#Deliverables" class="headerlink" title="Deliverables"></a>Deliverables</h3><p>You are required to submit the following:</p><ol><li>All source codes.</li><li>A setup guide to allow your tutor to set up the necessary environment to run both programs.<br>All files must be zipped into one single file using Winzip. Keep a clean directory structure so that Part 1 and Part 2 are unzipped into separate directories.</li></ol>]]></content>
    
    <summary type="html">
    
      本题使用Java JAI和JMF库分别实现一个ImageViewer和MediaPlayer
    
    </summary>
    
      <category term="Java" scheme="https://tk1307993.coding.me/categories/Java/"/>
    
    
      <category term="JAI" scheme="https://tk1307993.coding.me/tags/JAI/"/>
    
      <category term="JMF" scheme="https://tk1307993.coding.me/tags/JMF/"/>
    
      <category term="Swing" scheme="https://tk1307993.coding.me/tags/Swing/"/>
    
  </entry>
  
  <entry>
    <title>C代写：CS140 Matrix-Vector Multiplication</title>
    <link href="https://tk1307993.coding.me/CS140-Matrix-VectorMultiplication.html"/>
    <id>https://tk1307993.coding.me/CS140-Matrix-VectorMultiplication.html</id>
    <published>2018-07-31T12:44:24.000Z</published>
    <updated>2018-07-31T12:45:08.529Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Matrix和Vector是Linear algebra中最基础的概念。而利用计算机求解数学问题，是一种常见的做法。</p><p>将数学公式、定理用计算机编程实现，看起来并不是一件难事，但是对于某些算法，在不考虑时间复杂度的情况下，编写出来的代码运行效率将极其低下。尤其是I/O操作和循环结合的地方，在数据量大的情况下，往往不能快速地得到答案。因此在求解问题的过程中，对于原数学公式、定理的简化与改写，是很有必要的。</p><p>而本次作业需要在给定的时间复杂度条件下，求解一些基本的线性代数的问题。</p><h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>This assignment is to write a parallel program to multiply a matrix by a vector, and to use this routine in an implementation of the power method to find the absolute value of the largest eigenvalue of the matrix. You will write separate functions to generate the matrix and to perform the power method, and you will do some timing experiments with the power method routine.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要求解absolute value of the largest eigenvalue of the matrix，也就是矩阵的最大特征值。对于矩阵特征值的理解，请参考如何理解矩阵特征值？</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>本题需要求解的其中一个矩阵为<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">7</span></span><br></pre></td></tr></table></figure></p><p>通过观察，上面的矩阵是一个上三角矩阵。而三角矩阵的特征值就是对角线上的各个元素。</p><p>因此我们需要编程判断，一个矩阵是否是三角矩阵，如果是，则取其对角线上的元素，作为矩阵的特征值。</p><p>下面给出判断一个矩阵是否是上三角矩阵的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_upper_triangular_matrix</span><span class="params">(<span class="keyword">int</span> **matrix, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (matrix[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      本题需要求解矩阵的最大特征值
    
    </summary>
    
      <category term="C" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Algorithm" scheme="https://tk1307993.coding.me/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Java代写：CS413 Data Security</title>
    <link href="https://tk1307993.coding.me/CS413-DataSecurity.html"/>
    <id>https://tk1307993.coding.me/CS413-DataSecurity.html</id>
    <published>2018-07-30T13:18:59.000Z</published>
    <updated>2018-07-31T12:38:34.394Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>古典密码在密码学中，有着举足轻重的作用。做为Data security领域的基础算法理念，离不开其中的置换和置乱两大算法。</p><p>置换，即保持明文中的字符本身，但对字符的顺序进行重新排列的算法。</p><p>置乱，即将明文中的字符，用其他字符或字符序列进行替换。</p><p>而将经过加密的密文，找到其中的统计规律，并还原出其中的原文，称为密码破解。</p><p>而本次作业就是需要找到统计规律，进行密码破解。</p><h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>An encrypted file, cryptfile1.txt, is given. Your task is to decrypt it. </p><p>The file was encrypted using some substitution algorithm. The easiest way to break such encryptions is by an analysis of letter frequency. You can go to the library or the Web and get information on the relative frequency of letters in the English language. A program, LetterCount.java, is also given which would allow you to find this yourself. You would simply have to choose a source text file that is sufficiently long and sufficiently representative of English that the relative frequencies of letters in it is pretty much the same as the relative frequencies given in published sources. The real value of LetterCount.java is that it provides sample code that you code adapt to decryption purposes. </p><p>This encryption is simple enough that in theory you could do it by hand. If you find that your initial attempt by hand is netting nothing, you may want to write a program to help. You should hand in the results of your decryption effort.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要利用给出的Java框架，以及密文文件，写出解密算法，进行破解</p><p>下面是一段密文：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pmefp wunhi igsrh lxjsv xlmwg hyhig</span><br><span class="line">rkfmk zsgep gsvhw hbdth <span class="keyword">swxtv </span><span class="keyword">shmkm</span></span><br><span class="line"><span class="keyword">otckt </span>euiig hgnmo ceess theoh snegs</span><br><span class="line">eepws lmrsw mwgep piheg vewlx lexek</span><br><span class="line">mepmr skmkw sjxlm wfvii heziv ekisr</span><br><span class="line">ehcwu xlias hoofo mkveg sette adrla</span><br><span class="line">xlivi lmrom fivxl lsphw ytsjv vphwq</span><br></pre></td></tr></table></figure></p><p>首先自然是发现这段文字中，每个字母出现的频率是不一样的，首先猜测仅进行了置换。</p><p>任意找一个词频表，试着解析。</p><p>果然出现了apple，cable之类的可见词汇。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ol><li>根据不同的词频，写程序大胆猜测</li><li>必要时需要进行分词，写程序对不同组合进行尝试</li><li>当发现可见字符时，记录所采用的算法</li><li>猜测密钥</li></ol>]]></content>
    
    <summary type="html">
    
      本题需要利用给出的Java框架，以及密文文件，写出解密算法，进行破解。
    
    </summary>
    
      <category term="Java" scheme="https://tk1307993.coding.me/categories/Java/"/>
    
    
      <category term="Security" scheme="https://tk1307993.coding.me/tags/Security/"/>
    
      <category term="Algorithm" scheme="https://tk1307993.coding.me/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>C代写：CS50 C Programming Assignment6</title>
    <link href="https://tk1307993.coding.me/CS50-C-Programming-Assignment-6.html"/>
    <id>https://tk1307993.coding.me/CS50-C-Programming-Assignment-6.html</id>
    <published>2018-07-29T01:37:57.000Z</published>
    <updated>2018-07-29T01:43:35.556Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>Work on an assignment by yourself without sharing the answer to a classmate. (It is great that students study together but an assignment is an individual task. It is not a group project.)</li><li>Start to do an assignment early and ask the teacher if you have a question.</li><li>Add a comment with your name at the top of your source code</li><li>Put all your files that you want to submit into one zip file</li><li>Your folder should have your last name, first name, your class and assignment number. Example: rattanasook_hathairat_cs50_6.zip</li></ul><h6 id="Please-save-the-program-with-the-name-‘files-c’"><a href="#Please-save-the-program-with-the-name-‘files-c’" class="headerlink" title="Please save the program with the name ‘files.c’"></a>Please save the program with the name ‘files.c’</h6><p>Write a program that merges two files as follows. The two files are in the docsharing which you can download it.<br>One file will contain usernames (usernames.txt):<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">foster001</span></span><br><span class="line"><span class="keyword">smith023</span></span><br><span class="line"><span class="keyword">nyuyen002</span></span><br><span class="line"><span class="keyword">…</span></span><br></pre></td></tr></table></figure></p><p>The other file will contain passwords (passwords.txt):<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">x</span><span class="number">34</span>rdf<span class="number">3</span>e</span><br><span class="line">p<span class="number">43e4</span>rdd</span><br><span class="line">w<span class="number">32</span>eds<span class="number">22</span></span><br><span class="line">…</span><br></pre></td></tr></table></figure></p><p>The program should create a third file matching username and passwords (usernamesPasswords.txt):<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">foster001</span> x34rdf3e</span><br><span class="line"><span class="keyword">smith023 </span>p43e4rdd</span><br><span class="line"><span class="symbol">nyuyen002</span> w32eds22</span><br><span class="line">… …</span><br></pre></td></tr></table></figure></p><p>Give the user of your programs the option of displaying you output file.</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>下边是完整实现<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USERNAME_FILE <span class="meta-string">"usernames.txt"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PASSWORD_FILE <span class="meta-string">"passwords.txt"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COMBINE_FILE <span class="meta-string">"usernamesPasswords.txt"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> display; <span class="comment">// Whether to show result</span></span><br><span class="line">FILE* u_file; <span class="comment">// File handler to username</span></span><br><span class="line">FILE* p_file; <span class="comment">// File handler to password</span></span><br><span class="line">FILE* o_file; <span class="comment">// File handler to output file</span></span><br><span class="line"><span class="keyword">char</span> line_u[<span class="number">128</span>];</span><br><span class="line"><span class="keyword">char</span> line_p[<span class="number">128</span>];</span><br><span class="line"><span class="keyword">char</span> line_o[<span class="number">512</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(argc == <span class="number">2</span> &amp;&amp; <span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"-s"</span>) == <span class="number">0</span>)&#123;</span><br><span class="line">display = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"You can add -s option to display output.\n"</span>);</span><br><span class="line">display = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open file</span></span><br><span class="line">u_file = fopen(USERNAME_FILE, <span class="string">"r"</span>);</span><br><span class="line">p_file = fopen(PASSWORD_FILE, <span class="string">"r"</span>);</span><br><span class="line">o_file = fopen(COMBINE_FILE, <span class="string">"w"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read file line by line</span></span><br><span class="line"><span class="keyword">while</span>(!feof(u_file))&#123;</span><br><span class="line">fgets(line_u, <span class="number">128</span>, u_file);</span><br><span class="line">fgets(line_p, <span class="number">128</span>, p_file);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Replace '\n' to '\0'</span></span><br><span class="line">line_u[<span class="built_in">strlen</span>(line_u) - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Concat strings</span></span><br><span class="line"><span class="built_in">sprintf</span>(line_o, <span class="string">"%s\t%s"</span>, line_u, line_p);</span><br><span class="line"><span class="keyword">if</span>(display == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>, line_o);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Output file</span></span><br><span class="line"><span class="built_in">fprintf</span>(o_file, <span class="string">"%s"</span>, line_o);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close file handler</span></span><br><span class="line">fclose(u_file);</span><br><span class="line">fclose(p_file);</span><br><span class="line">fflush(o_file);</span><br><span class="line">fclose(o_file);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      C语言基础练习题。
    
    </summary>
    
      <category term="C" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
  </entry>
  
  <entry>
    <title>Python代写：CSC411 Digit Classification</title>
    <link href="https://tk1307993.coding.me/CSC411-DigitClassification.html"/>
    <id>https://tk1307993.coding.me/CSC411-DigitClassification.html</id>
    <published>2018-07-28T01:47:59.000Z</published>
    <updated>2018-07-28T01:50:43.312Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>In this assignment, you will compare the characteristics and performance of different classifiers, namely logistic regression, k-nearest neighbours and naive Bayes. You will experiment with these extensions and extend the provided code. Note that you should understand the code first instead of using it as a black box.</p><p>Python versions of the code have been provided. You are free to work with whichever you wish.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>作为Machine Learning的三大基础算法</p><ol><li>Logistic regression，也就是logistic回归，常用于数据挖掘，疾病自动诊断，经济预测等领域</li><li>K-nearest neighbours，也就是K邻近算法，常用于数据挖掘，以及分类，对未知事物的识别等领域</li><li>Naive Bayes，也就是朴素贝叶斯，常用于分类器，文本分类识别</li></ol><p>本题给出了以上三大算法的基本实现，但是需要根据测试框架的调度逻辑，实现未完成的测试函数。</p><p>本题偏重工程性质，在不断的调试中，会加深对算法的理解。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>下面是check_grad函数的实现<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_grad</span><span class="params">(func, X, epsilon, *args)</span>:</span></span><br><span class="line">  <span class="keyword">if</span> len(X.shape) != <span class="number">2</span> <span class="keyword">or</span> X.shape[<span class="number">1</span>] != <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">raise</span> ValueError(<span class="string">"X must be a vector"</span>)</span><br><span class="line"></span><br><span class="line">  y, dy, = func(X, *args)[:<span class="number">2</span>]         <span class="comment"># get the partial derivatives dy</span></span><br><span class="line">  dh = np.zeros((len(X), <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> xrange(len(X)):</span><br><span class="line">    dx = np.zeros((len(X), <span class="number">1</span>))</span><br><span class="line">    dx[j] += epsilon</span><br><span class="line">    y2 = func(X+dx, *args)[<span class="number">0</span>]</span><br><span class="line">    dx = -dx</span><br><span class="line">    y1 = func(X+dx, *args)[<span class="number">0</span>]</span><br><span class="line">    dh[j] = (y2 - y1)/(<span class="number">2</span>*epsilon)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">print</span> np.hstack((dy, dh))          <span class="comment"># print the two vectors</span></span><br><span class="line">  d = LA.norm(dh-dy)/LA.norm(dh+dy)  <span class="comment"># return norm of diff divided by norm of sum</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> d</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      本题偏重工程性质，在不断的调试中，会加深对算法的理解。
    
    </summary>
    
      <category term="Python" scheme="https://tk1307993.coding.me/categories/Python/"/>
    
    
      <category term="Algorithm" scheme="https://tk1307993.coding.me/tags/Algorithm/"/>
    
      <category term="Machine Learning" scheme="https://tk1307993.coding.me/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>PHP代写：CS353 Database System</title>
    <link href="https://tk1307993.coding.me/CS353-DatabaseSystem.html"/>
    <id>https://tk1307993.coding.me/CS353-DatabaseSystem.html</id>
    <published>2018-07-27T13:41:38.000Z</published>
    <updated>2018-07-27T12:30:38.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>Prior to beginning tis assignment, please download the studentsdb.sql, studentdb.pdf and the Index.php file from the course web site.<br>In this assignment, you are to complete the php script, Index.php, which will use the values input by the user. This script contains one push botton and one textbox in order to perform the interaction.<br>The web page should provide the following functions:</p><ol><li>Connect to the database</li><li>Check if the database connection is successful</li><li>Validation on user typing</li><li>Search and display the query result of each student</li><li>Error message if no student found</li></ol><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要实现一个简易的基于网页的查询功能，包括连接数据库、数据库查询、处理用户输入、异常处理。用户的交互部分已经由Index.php提供，我们需要做的是完善它的逻辑。<br>本题难点在于调试部分，建议一边实现一边调试，并在关键地方打印变量值来进行调试。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>下面给出数据库连接部分代码，默认数据库为本地mysql，用户名为root，密码为123456<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$conn = mysql_connect(<span class="string">"localhost"</span>, <span class="string">"root"</span>, <span class="string">"123456"</span>);</span><br><span class="line"><span class="keyword">if</span> (!$conn) &#123;</span><br><span class="line">  <span class="comment">// connection failed</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Could not connect to database: "</span> . mysql_error();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// connection successful</span></span><br><span class="line">...</span><br><span class="line">mysql_close($conn)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      本题需要实现一个简易的基于网页的查询功能，包括连接数据库、数据库查询、处理用户输入、异常处理。
    
    </summary>
    
      <category term="PHP" scheme="https://tk1307993.coding.me/categories/PHP/"/>
    
    
      <category term="Web" scheme="https://tk1307993.coding.me/tags/Web/"/>
    
      <category term="Database" scheme="https://tk1307993.coding.me/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>C代写：ECE222 Directory Listing</title>
    <link href="https://tk1307993.coding.me/ECE222-Directory-Listing.html"/>
    <id>https://tk1307993.coding.me/ECE222-Directory-Listing.html</id>
    <published>2018-07-26T13:41:38.000Z</published>
    <updated>2018-07-26T13:43:20.163Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>In this assignment, each student is to write a program that provides a file listing for the given directory. The program should list the filename, file size, and time last modified for each file within the directory. The program should provide the user with the option to sort the listing based on filename, on file size, or on time last modified. The program should run once and quit (it does not loop).</p><p>The syntax (usage) for the program should be:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prog_name [<span class="string">directory</span>] [<span class="string">[-s</span>][<span class="symbol">-t</span>]]</span><br></pre></td></tr></table></figure></p><p>where –s indicates sort by file size and –t indicates sort by time last modified. These flags are optional but mutually exclusive. The directory is also optional; if it is omitted than a default directory of “.” (the current directory) should be assumed. Every possible combination of command line arguments, from the above syntax, will be tested.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要实现文件系统中，类似ls命令显示的结果。<br>本题较为简单，如果掌握了基本的Linux函数库用法可以事半功倍。此外需要注意的是命令行参数的处理方法。最后按照测试集显示的格式，做出准确的输出即可。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>下面给出命令行参数的解析逻辑<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> arg;</span><br><span class="line">  <span class="keyword">int</span> sort_by_size = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> sort_by_time = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ((arg = getopt(argc, argv, <span class="string">"st"</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (arg) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">      sort_by_size = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'t'</span>:</span><br><span class="line">      sort_by_time = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"bad argument: %c\n"</span>, arg);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      本题需要实现文件系统中，类似ls命令显示的结果。
    
    </summary>
    
      <category term="Java" scheme="https://tk1307993.coding.me/categories/Java/"/>
    
    
      <category term="File System" scheme="https://tk1307993.coding.me/tags/File-System/"/>
    
  </entry>
  
  <entry>
    <title>Java代写：CS335 Space Racing Simulator</title>
    <link href="https://tk1307993.coding.me/CS335-SpaceRacingSimulator.html"/>
    <id>https://tk1307993.coding.me/CS335-SpaceRacingSimulator.html</id>
    <published>2018-07-25T12:57:34.000Z</published>
    <updated>2018-07-25T13:00:14.897Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>This final project is a group project, each group should have two people. The goal of this project is to develop a java based racing game. </p><p>The space racing game should provide the following functions:</p><ol><li>One computer graphics environment</li><li>User-controlled car</li><li>User controlled viewpoint</li><li>Game AI</li></ol><p>The racing vehicle car’s movement can be determined by its velocity and acceleration vectors.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要基于OpenGL开发一个竞速小游戏，需要了解OpenGL的编程框架，以及掌握OpenGL函数库的基本用法，并以此来实现竞速小游戏。整个游戏地图包括边界、坡度、障碍物等。</p><p>本题的学习曲线较为陡峭，但是如果掌握了OpenGL的基本编程方法，难度也不是很大。此外，一个值得注意的地方是，本题的AI需要额外设计，对障碍物、边界等地区，进行判断。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>本题代码量很大，下面仅给出display的部分代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpaceRacingSimulatorEventListerer</span> <span class="keyword">implements</span></span></span><br><span class="line"><span class="class">    <span class="title">GLEventListener</span>, <span class="title">KeyListener</span>, <span class="title">MouseListener</span>, <span class="title">MouseMotionListener</span> </span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">private</span> GLU glu = <span class="keyword">new</span> GLU();</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">(GLAutoDrawable gLDrawable)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> GL2 gl = gLDrawable.getGL().getGL2();</span><br><span class="line">    gl.glClearColor(<span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">1</span>);</span><br><span class="line">    gl.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line">    gl.glPushMatrix();</span><br><span class="line">    gl.glRotatef(rot, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    gl.glRotatef(rotX, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    gl.glLightfv(GL2.GL_LIGHT0, GL2.GL_POSITION,lightPos, <span class="number">0</span>);</span><br><span class="line">    gl.glPushMatrix(); </span><br><span class="line">    gl.glTranslatef(-<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>); </span><br><span class="line">    <span class="comment">// The color of the sphere</span></span><br><span class="line">    <span class="keyword">float</span> materialColor[] = &#123;<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>&#125;;</span><br><span class="line">    <span class="comment">// The specular (shiny) component of the material</span></span><br><span class="line">    <span class="keyword">float</span> materialSpecular[] = &#123;<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>&#125;;</span><br><span class="line">    <span class="comment">// The color emitted by the material</span></span><br><span class="line">    <span class="keyword">float</span> materialEmission[] = &#123;<span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>&#125;;</span><br><span class="line">    ...</span><br><span class="line">    gl.glPushMatrix();</span><br><span class="line">    gl.glTranslatef(<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    gl.glColor3f(<span class="number">0.8f</span>, <span class="number">0.8f</span>, <span class="number">0.8f</span>);</span><br><span class="line">    gl.glPopMatrix();</span><br><span class="line">    gl.glTranslatef(<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    gl.glScalef(<span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>); </span><br><span class="line">    gl.glTranslatef(-<span class="number">0.5f</span>, -<span class="number">0.5f</span>, -<span class="number">0.5f</span>);</span><br><span class="line">    drawCube(gl); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> width = <span class="number">100</span>, height = <span class="number">100</span>; </span><br><span class="line">    <span class="keyword">byte</span>[] src = <span class="keyword">new</span> <span class="keyword">byte</span>[width * height];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>; a &lt; height; a++) &#123;</span><br><span class="line">      <span class="keyword">int</span> color = (<span class="keyword">int</span>)(a * <span class="number">1.0f</span> / height * <span class="number">255</span>); </span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; width; b++) &#123;</span><br><span class="line">        src[a * width + b] = (<span class="keyword">byte</span>)color;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    gl.glPixelStorei(GL2.GL_UNPACK_ALIGNMENT, <span class="number">1</span>);</span><br><span class="line">    gl.glPixelStorei(GL2.GL_UNPACK_SKIP_PIXELS, <span class="number">0</span>);</span><br><span class="line">    gl.glPixelStorei(GL2.GL_UNPACK_SKIP_ROWS, <span class="number">0</span>);</span><br><span class="line">    gl.glPushMatrix(); </span><br><span class="line">    gl.glLoadIdentity(); </span><br><span class="line"></span><br><span class="line">    gl.glMatrixMode(GL2.GL_PROJECTION);</span><br><span class="line">    gl.glPushMatrix(); </span><br><span class="line">    gl.glLoadIdentity(); </span><br><span class="line"></span><br><span class="line">    glu.gluOrtho2D(<span class="number">0</span>, windowWidth, <span class="number">0</span>, windowHeight);</span><br><span class="line">    gl.glRasterPos2f(windowWidth / <span class="number">2</span>, windowHeight / <span class="number">2</span>); </span><br><span class="line">    gl.glPopMatrix();</span><br><span class="line"></span><br><span class="line">    gl.glMatrixMode(GL2.GL_MODELVIEW);</span><br><span class="line">    gl.glPopMatrix();</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      本题需要基于OpenGL开发一个竞速小游戏，需要了解OpenGL的编程框架，以及掌握OpenGL函数库的基本用法，并以此来实现竞速小游戏。整个游戏地图包括边界、坡度、障碍物等。
    
    </summary>
    
      <category term="Java" scheme="https://tk1307993.coding.me/categories/Java/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
      <category term="OpenGL" scheme="https://tk1307993.coding.me/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>Java代写：CS110 Circle</title>
    <link href="https://tk1307993.coding.me/CS110-Circle.html"/>
    <id>https://tk1307993.coding.me/CS110-Circle.html</id>
    <published>2018-07-25T12:54:13.000Z</published>
    <updated>2018-07-25T12:56:54.111Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>In this Assignment, you should write a class that, given a circle’s radius, has methods that return the circle’s area, diameter, and circumference.</p><p>In case you have forgotten, the equations for a circle’s area, diameter, and circumference is given below.<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">area</span> = πrr</span><br><span class="line"><span class="attr">diameter</span> = <span class="number">2</span>r</span><br><span class="line"><span class="attr">circumference</span> = <span class="number">2</span>πr</span><br></pre></td></tr></table></figure></p><p>Based on Chapter 3, Programming Challenge # 8 Circle class in your textbook. Your output is given below.<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Enter the radius <span class="keyword">of</span> a circle: <span class="number">5.3</span></span><br><span class="line">The circle<span class="symbol">'s</span> area <span class="keyword">is</span>            <span class="number">88.2472631</span></span><br><span class="line">The circle<span class="symbol">'s</span> diameter <span class="keyword">is</span>        <span class="number">10.6</span></span><br><span class="line">The circle<span class="symbol">'s</span> circumference <span class="keyword">is</span>   <span class="number">33.300854</span></span><br></pre></td></tr></table></figure></p><p>Write a separate class called CircleDemo with a main method that asks the user for the circle’s radius, creates a Circle object, and then reports the circle’s area, diameter, and circumference using the circle’s getter methods.</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>本题需要的数学背景见Pi，需要实现一个Circle类，以及对应的方法，如setRadius()，getRadius()，getArea()，getDiameter()，getCircumference()。</p><p>本题较为简单，注意数据类型，精度以及输入输出格式即可。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>下面是ClicleDemo类的实现<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CircleDemo</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">double</span> radius;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> PI = <span class="number">3.14159</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">CircleDemo</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadius</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.radius = radius;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getRadius</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.radius;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> CircleDemo.PI * <span class="keyword">this</span>.radius * <span class="keyword">this</span>.radius;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getDiameter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * <span class="keyword">this</span>.radius;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getCircumference</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * CircleDemo.PI * <span class="keyword">this</span>.radius;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      Java语言基础练习题。
    
    </summary>
    
      <category term="Java" scheme="https://tk1307993.coding.me/categories/Java/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
  </entry>
  
  <entry>
    <title>C代写：CS50 C Programming Assignment5</title>
    <link href="https://tk1307993.coding.me/CS50-C-Programming-Assignment-5.html"/>
    <id>https://tk1307993.coding.me/CS50-C-Programming-Assignment-5.html</id>
    <published>2018-07-24T14:33:29.000Z</published>
    <updated>2018-07-24T14:48:11.653Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>Work on an assignment by yourself without sharing the answer to a classmate. (It is great that students study together but an assignment is an individual task. It is not a group project.)</li><li>Start to do an assignment early and ask the teacher if you have a question.</li><li>Add a comment with your name at the top of your source code</li><li>Put all your files that you want to submit into one zip file</li></ul><h6 id="Please-save-the-program-with-the-name-‘cards-c’"><a href="#Please-save-the-program-with-the-name-‘cards-c’" class="headerlink" title="Please save the program with the name ‘cards.c’"></a>Please save the program with the name ‘cards.c’</h6><ol><li><p>Write a structure (struct card) that will represent a card in a standard deck of playing cards. You will need to represent both the suit (clubs, diamonds, hearts or spades) as well as the rank ( A, K, Q, J, 10, 9, 8, 7, 6, 5, 6, 7, 2) of each card. Note that a deck of playing cards can be represented as an array declared as</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">card</span> <span class="title">deck</span>[52];</span></span><br></pre></td></tr></table></figure></li><li><p>Write a function that will perform a perfect shuffle on a deck of cards represented using the data structures from part a. In a perfect shuffle, the deck is broken exactly in half and rearranged so that the first card is followed by the 27th card, followed by the second card, followed by the 28th card, and so on.</p></li><li><p>Write a program that tests how many perfect shuffles are necessary to return the deck to its original configuration.</p></li></ol>]]></content>
    
    <summary type="html">
    
      C语言基础练习题。
    
    </summary>
    
      <category term="C" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
  </entry>
  
  <entry>
    <title>C代写：CS50 C Programming Assignment1</title>
    <link href="https://tk1307993.coding.me/CS50-C-Programming-Assignment-1.html"/>
    <id>https://tk1307993.coding.me/CS50-C-Programming-Assignment-1.html</id>
    <published>2018-07-24T14:26:39.000Z</published>
    <updated>2018-07-24T14:48:09.198Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>Work on an assignment by yourself without sharing the answer to a classmate. (It is great that students study together but an assignment is an individual task. It is not a group project.)</li><li>Start to do an assignment early and ask the teacher if you have a question.</li><li>Add a comment with your name at the top of your source code</li><li>Put all your files that you want to submit into one zip file</li></ul><h6 id="1-Please-save-the-program-with-the-name-‘cal-c’"><a href="#1-Please-save-the-program-with-the-name-‘cal-c’" class="headerlink" title="1. Please save the program with the name ‘cal.c’"></a>1. Please save the program with the name ‘cal.c’</h6><p>Write a program to input two integer values and out their sum and their difference. A sample run off the program follows. The user input is represented in boldface in the sample run. (page. 56, C by Discovery 4th edition, by Foster &amp; Foster)</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Example:</span></span><br><span class="line">Enter an <span class="string">integer:</span> <span class="number">45</span></span><br><span class="line">Enter another <span class="string">integer:</span> <span class="number">83</span></span><br><span class="line"><span class="number">45</span> + <span class="number">83</span> = <span class="number">128</span></span><br><span class="line"><span class="number">45</span> – <span class="number">83</span> = <span class="number">-38</span></span><br></pre></td></tr></table></figure><h6 id="2-Please-save-the-program-with-the-name-‘guess-c’"><a href="#2-Please-save-the-program-with-the-name-‘guess-c’" class="headerlink" title="2. Please save the program with the name ‘guess.c’"></a>2. Please save the program with the name ‘guess.c’</h6><p>Write a C program that plays a number guessing game with the user. A sample run for the game follows. User input is shown in boldface in the sample run. (C by discovery)<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Welcome <span class="built_in">to</span> <span class="keyword">the</span> game <span class="keyword">of</span> Guess It!</span><br><span class="line">I will choose <span class="keyword">a</span> <span class="built_in">number</span> between <span class="number">1</span> <span class="keyword">and</span> <span class="number">200.</span></span><br><span class="line">You will <span class="keyword">try</span> <span class="built_in">to</span> guess that <span class="built_in">number</span>. If you guess wrong, I will tell you <span class="keyword">if</span> you guessed too high <span class="keyword">or</span> too low.</span><br><span class="line">You have <span class="number">5</span> tries <span class="built_in">to</span> <span class="built_in">get</span> <span class="keyword">the</span> <span class="built_in">number</span>.</span><br><span class="line">OK, I am thinking <span class="keyword">of</span> <span class="keyword">a</span> <span class="built_in">number</span>. Try <span class="built_in">to</span> guess <span class="keyword">it</span>.</span><br><span class="line">Your guess? <span class="number">50</span></span><br><span class="line">Too high!</span><br><span class="line">Your guess? <span class="number">12</span></span><br><span class="line">Too low!</span><br><span class="line">Your guess? <span class="number">112</span></span><br><span class="line">Too high!</span><br><span class="line">Your guess? <span class="number">250</span></span><br><span class="line">Illegal guess. Your guess must be between <span class="number">1</span> <span class="keyword">and</span> <span class="number">200.</span></span><br><span class="line">Try again. Your guess? <span class="number">30</span></span><br><span class="line">**** CORRECT ****</span><br><span class="line">Want <span class="built_in">to</span> play again? y</span><br><span class="line">Ok, I am thinking <span class="keyword">of</span> <span class="keyword">a</span> <span class="built_in">number</span>. Try <span class="built_in">to</span> guess <span class="keyword">it</span>.</span><br><span class="line">Your guess? <span class="number">58</span></span><br><span class="line">**** CORRECT ****</span><br><span class="line">Want <span class="built_in">to</span> play again? n</span><br><span class="line">Goodbye, It was fun. Play again soon.</span><br></pre></td></tr></table></figure></p><p>The following code will print out a random generator between 1-100 ten times.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Ten random numbers in [1,100]\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="number">1</span>; c &lt;= <span class="number">10</span>; c++)</span><br><span class="line">    &#123;</span><br><span class="line">    n = rand() % <span class="number">100</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      C语言基础练习题。
    
    </summary>
    
      <category term="C" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
  </entry>
  
  <entry>
    <title>C代写：CS101 Binary Arithmetic</title>
    <link href="https://tk1307993.coding.me/CS101-BinaryArithmetic.html"/>
    <id>https://tk1307993.coding.me/CS101-BinaryArithmetic.html</id>
    <published>2018-07-24T13:33:04.000Z</published>
    <updated>2018-07-24T13:39:02.481Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>In this Assignment, you should write a program that allows the user to perform simple arithmetic in binary. Upon starting, the program should tell the user that it is a binary math program, along with brief instructions on how to use the program.</p><p>The program should then enter a loop, where it gives a prompt, such as “input&gt;”. Upon receiving input from the user, the program should process it, report the output result (or error), and loop back to the prompt. This should continue until the user gives the keyphrase to exit the program (keyphrase is your choice, good choices are “quit”, “end”, “exit”, etc.). </p><p>For example:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input&gt; <span class="number">101</span>+<span class="number">1100</span></span><br><span class="line"><span class="number">10001</span></span><br><span class="line">Input&gt; <span class="number">111001</span><span class="number">-1010</span></span><br><span class="line"><span class="number">101111</span></span><br></pre></td></tr></table></figure><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>Binary arithmetic， 也就是二进制算法，是程序设计的基础。本题需要实现一个可交互的程序，根据用户输入，实现二进制算法，如二进制加法、二进制减法等。<br>本题难度不大，注意输入的数据类型是char，需要拆分后转换为int，以及keyphrase关键响应符号的处理逻辑即可。</p><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><p>下面是处理用户交互部分的实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> input[<span class="number">100</span>];</span><br><span class="line">  <span class="keyword">char</span> *keyphrase = <span class="string">"quit"</span>;</span><br><span class="line">  <span class="keyword">char</span> *add = <span class="string">"+"</span>;</span><br><span class="line">  <span class="keyword">char</span> *sub = <span class="string">"-"</span>;</span><br><span class="line">  <span class="keyword">char</span> *mul = <span class="string">"*"</span>;</span><br><span class="line">  <span class="keyword">char</span> *div = <span class="string">"/"</span>;</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"input&gt; "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, input);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strncmp</span>(input, keyphrase, <span class="built_in">strlen</span>(keyphrase)) == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strstr</span>(input, add) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">      binary_add(input);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strstr</span>(input, sub) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">      binary_sub(input);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strstr</span>(input, mul) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">      binary_mul(input);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strstr</span>(input, div) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">      binary_div(input);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Binary arithmetic， 也就是二进制算法，是程序设计的基础。本题需要实现一个可交互的程序，根据用户输入，实现二进制算法，如二进制加法、二进制减法等。
    
    </summary>
    
      <category term="C" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Programming Fundamentals" scheme="https://tk1307993.coding.me/tags/Programming-Fundamentals/"/>
    
  </entry>
  
  <entry>
    <title>C++代写：CSCI104 Stack Implementation</title>
    <link href="https://tk1307993.coding.me/CSCI104-Stack-Implementation.html"/>
    <id>https://tk1307993.coding.me/CSCI104-Stack-Implementation.html</id>
    <published>2018-07-23T12:35:51.000Z</published>
    <updated>2018-07-24T13:33:49.838Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>Implement a templated Stack class. It must implement the following interface (abstract class), which you should inherit from. In other words, create a file IStack.h which contains this definition, and then your own class (which may be called something like ListStack or ArrayStack or other, depending on how you impement it) should inherit publicly from IStack.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">IStack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="comment">/* returns whether the stack contains any elements */</span></span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">()</span> <span class="keyword">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* adds a value to the top of the stack */</span></span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> T&amp; val)</span> </span>= <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* deletes the top value from the stack.</span></span><br><span class="line"><span class="comment">     Throws EmptyStackException if stack was empty.</span></span><br><span class="line"><span class="comment">     However, you should avoid having this exception thrown,</span></span><br><span class="line"><span class="comment">     by checking whether the stack is empty before calling it. */</span></span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* returns the top value on the stack.</span></span><br><span class="line"><span class="comment">     Throws EmptyStackException if stack was empty.</span></span><br><span class="line"><span class="comment">     However, you should avoid having this exception thrown,</span></span><br><span class="line"><span class="comment">     by checking whether the stack is empty before calling it. */</span></span><br><span class="line">  <span class="function"><span class="keyword">virtual</span> <span class="keyword">const</span> T&amp; <span class="title">top</span><span class="params">()</span> <span class="keyword">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Your implementation can reuse some of your earlier linked list code, or you can build it on top of an array (which you dynamically allocate) - your choice. You must ensure that all functions run in time O(1) (amortized time O(1) if you use an array implementation), and should give an explanation with your code for why your code runs in O(1) time. Your solution to this problem absolutely cannot use STL container classes (so no stack or vector or deque or list or such provided by STL).</p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>Stack，也就是数据结构中的栈。本题定义了栈的模板和接口，我们只需要实现isEmpty()，push()，pop()，top()这四个函数，以及类的构造函数和析构函数即可。我们可以利用linked list，即线性链表来存储数据，这样也能保证functions run in time O(1)，即时间复杂度为1。</p><p>另外一点需要注意的是，本题不能使用STL模板库，因此基本的数据结构都需要我们来实现。</p><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><p>下面简单给出ListStack.h文件的示例代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">ListStack</span>:</span> <span class="keyword">public</span> IStack</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  ListStack();</span><br><span class="line">  ListStack(<span class="keyword">int</span> sz = <span class="number">20</span>);</span><br><span class="line">  ListStack(<span class="keyword">const</span> ListStack&lt;T&gt;&amp; ls);</span><br><span class="line">  ~ListStack();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> T&amp; val)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">const</span> T&amp; <span class="title">top</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  T* listStack;</span><br><span class="line">  <span class="keyword">int</span> size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Stack，也就是数据结构中的栈。本题定义了栈的模板和接口，我们只需要实现isEmpty()，push()，pop()，top()这四个函数，以及类的构造函数和析构函数即可。
    
    </summary>
    
      <category term="C++" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Data Structure" scheme="https://tk1307993.coding.me/tags/Data-Structure/"/>
    
      <category term="STL" scheme="https://tk1307993.coding.me/tags/STL/"/>
    
  </entry>
  
  <entry>
    <title>C代写：ECE222 Vectors And Matrices</title>
    <link href="https://tk1307993.coding.me/ECE222-Vectors-And-Matrices.html"/>
    <id>https://tk1307993.coding.me/ECE222-Vectors-And-Matrices.html</id>
    <published>2018-07-22T04:20:56.000Z</published>
    <updated>2018-07-22T04:26:00.932Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h3><p>In this lab, each student is to write a program that allows the user to manipulate the entries in vector, or in a matrix. The program should keep track of one vector of variable length, and one matrix of exactly 4x4 size. The program should enter a loop, displaying a set of options (given below). Once the user selects an option, the program should display the vector (or matrix, as appropriate) before and after the operation chosen by the user. For example, if the user selects “reverse vector” and the current vector is [-3 0 2 5] then the program should display:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">input</span><br><span class="line"><span class="number">-3</span> <span class="number">0</span> <span class="number">2</span> <span class="number">5</span></span><br><span class="line">reversed</span><br><span class="line"><span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><p>The program should run until the user selects an option to quit.</p><p>The program must use the following structure definitions.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vector</span> &#123;</span></span><br><span class="line">  <span class="keyword">float</span> *data;</span><br><span class="line">  <span class="keyword">int</span>    size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span> &#123;</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">vector</span> <span class="title">rows</span>[4];</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>Vectors和Matrices，矢量和矩阵，也称一维和二维数组。</p><p>属于C语言很常见的数据结构。本题要实现的是矢量的反转，以及矩阵的转置。</p><p>反转和转置需要用到排序算法，这里我们采用Quicksort，也就是快速排序。</p><h3 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h3><p>矢量反转所用的快速排序算法如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">parition</span><span class="params">(struct <span class="built_in">vector</span> *vec, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">float</span> piovt, temp;</span><br><span class="line">  <span class="keyword">int</span> i, j;</span><br><span class="line">  piovt = *(vec[left]);</span><br><span class="line">  i = left;</span><br><span class="line">  j = right + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      ++i;</span><br><span class="line">    &#125; <span class="keyword">while</span> (*(vec[i]) &lt;= piovt &amp;&amp; i &lt;= right);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      --j;</span><br><span class="line">    &#125; <span class="keyword">while</span> (*(vec[j]) &gt; piovt);</span><br><span class="line">    <span class="keyword">if</span> (i &gt;= j) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    temp = *(vec[i]);</span><br><span class="line">    *(vec[i]) = *(vec[j]);</span><br><span class="line">    *(vec[j]) = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  temp = *(vec[left]);</span><br><span class="line">  *(vec[left]) = *(vec[right]);</span><br><span class="line">  *(vec[right]) = temp;</span><br><span class="line">  <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(struct <span class="built_in">vector</span> *vec, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">    i = partition(vec, left, right);</span><br><span class="line">    quick_sort(vec, left, right - <span class="number">1</span>);</span><br><span class="line">    quick_sort(vec, i + <span class="number">1</span>, right);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Vectors和Matrices，矢量和矩阵，也称一维和二维数组。属于C语言很常见的数据结构。本题要实现的是矢量的反转，以及矩阵的转置。
    
    </summary>
    
      <category term="C" scheme="https://tk1307993.coding.me/categories/C/"/>
    
    
      <category term="Algorithm" scheme="https://tk1307993.coding.me/tags/Algorithm/"/>
    
      <category term="Data Structure" scheme="https://tk1307993.coding.me/tags/Data-Structure/"/>
    
  </entry>
  
</feed>
